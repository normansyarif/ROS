<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        TEw4/w9GLEFOjlYRIwAAAABJRU5ErkJggg==
</value>
  </data>
</root>